// <auto-generated />
using GStoreWeb.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GStoreWeb.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230423221921_AddProductTableToDbAndSeed")]
    partial class AddProductTableToDbAndSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.2.23128.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GStoreWeb.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Graphic Cards"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Processors"
                        });
                });

            modelBuilder.Entity("GStoreWeb.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Seller")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "An Nvidia RTX 20 series base graphics card",
                            Name = "Nvidia RTX 2060",
                            Price = 280.0,
                            Seller = "AMD"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "An Nvidia RTX 30 series base graphics card",
                            Name = "Nvidia RTX 3060",
                            Price = 380.0,
                            Seller = "Gigabyte"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "An Nvidia RTX 30 series powerful graphics card",
                            Name = "Nvidia RTX 3080",
                            Price = 1200.0,
                            Seller = "MSI"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "The Ti version of the RTX 3080 graphics card",
                            Name = "Nvidia RTX 3080 Ti",
                            Price = 1450.0,
                            Seller = "Gigabyte"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Description = "An Nvidia RTX 30 series most powerful graphics card",
                            Name = "Nvidia RTX 3090",
                            Price = 1780.0,
                            Seller = "Gigabyte"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Description = "An Nvidia RTX 40 series base graphic card",
                            Name = "Nvidia RTX 4070",
                            Price = 690.0,
                            Seller = "ASUS"
                        });
                });

            modelBuilder.Entity("GStoreWeb.Models.Product", b =>
                {
                    b.HasOne("GStoreWeb.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
